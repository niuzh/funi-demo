package com.funi.demo.mbg;

import org.mybatis.generator.api.*;
import org.mybatis.generator.api.dom.java.*;
import org.mybatis.generator.exception.ShellException;
import org.mybatis.generator.internal.DefaultShellCallback;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

/**
 * mybatis 插件类
 * domain类添加序列号接口
 * domain去除多余的属性，方法
 * 产生待添加方法的Mapper类
 * @author zhihuan.niu
 */
public class DemoPlugin extends PluginAdapter {

    private FullyQualifiedJavaType serializable;
    private FullyQualifiedJavaType gwtSerializable;
    private boolean addGWTInterface;
    private boolean suppressJavaInterface;
    private String daoTargetDir;
    private String daoTargetPackage;
    private ShellCallback shellCallback;
    public DemoPlugin() {
        super();
        serializable = new FullyQualifiedJavaType("java.io.Serializable"); //$NON-NLS-1$
        gwtSerializable = new FullyQualifiedJavaType("com.google.gwt.user.client.rpc.IsSerializable"); //$NON-NLS-1$
    }

    public boolean validate(List<String> warnings) {
        // this plugin is always valid
        return true;
    }

    @Override
    public void setProperties(Properties properties) {
        super.setProperties(properties);
        addGWTInterface = Boolean.valueOf(properties.getProperty("addGWTInterface")); //$NON-NLS-1$
        suppressJavaInterface = Boolean.valueOf(properties.getProperty("suppressJavaInterface")); //$NON-NLS-1$
    }

    @Override
    public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass,IntrospectedTable introspectedTable) {
        makeSerializable(topLevelClass, introspectedTable);
        removeRootClassProperty(topLevelClass,introspectedTable);
        return true;
    }

    @Override
    public boolean modelPrimaryKeyClassGenerated(TopLevelClass topLevelClass,
                                                 IntrospectedTable introspectedTable) {
        makeSerializable(topLevelClass, introspectedTable);
        return true;
    }

    @Override
    public boolean modelRecordWithBLOBsClassGenerated(
            TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        makeSerializable(topLevelClass, introspectedTable);
        return true;
    }
    /**
     * 添加给Example类序列化的方法
     * @param topLevelClass
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean modelExampleClassGenerated(TopLevelClass topLevelClass,IntrospectedTable introspectedTable){
        makeSerializable(topLevelClass, introspectedTable);
        return true;
    }

    protected void makeSerializable(TopLevelClass topLevelClass,IntrospectedTable introspectedTable) {
        if (addGWTInterface) {
            topLevelClass.addImportedType(gwtSerializable);
            topLevelClass.addSuperInterface(gwtSerializable);
        }

        if (!suppressJavaInterface) {
            topLevelClass.addImportedType(serializable);
            topLevelClass.addSuperInterface(serializable);

            Field field = new Field();
            field.setFinal(true);
            field.setInitializationString("1L"); //$NON-NLS-1$
            field.setName("serialVersionUID"); //$NON-NLS-1$
            field.setStatic(true);
            field.setType(new FullyQualifiedJavaType("long")); //$NON-NLS-1$
            field.setVisibility(JavaVisibility.PRIVATE);
            field.addJavaDocLine("/**");
            field.addJavaDocLine(" * This field was generated by MyBatis Generator.");
            field.addJavaDocLine(" * serialVersionUID 序列号 ");
            field.addJavaDocLine(" */");
            topLevelClass.getFields().add(0, field);
        }
    }
    //删除domain基类存在的属性
    protected void removeRootClassProperty(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        if (!topLevelClass.getType().getShortName().endsWith("Example")) {
            List<String> removeList=new ArrayList<>();
            removeList.add("isDeleted");
            removeList.add("version");
            removeList.add("sysCreateTime");
            removeList.add("sysUpdateTime");
            removeList.add("sysDeleteTime");
            removeList.add("sysCreateId");
            removeList.add("sysUpdateId");
            removeList.add("sysDeleteId");
            List<Field> removeFieldList=new ArrayList<>();
            List<Method> removeMethodList=new ArrayList<>();
            for (String name:removeList) {
                for (Field field : topLevelClass.getFields()) {
                    if (field.getName().toLowerCase().equals(name.toLowerCase())){
                        removeFieldList.add(field);
                    }
                }
                for (Method method : topLevelClass.getMethods()) {
                    if (method.getName().toLowerCase().endsWith(name.toLowerCase())){
                        removeMethodList.add(method);
                    }
                }
            }
            topLevelClass.getFields().removeAll(removeFieldList);
            topLevelClass.getMethods().removeAll(removeMethodList);
        }
    }

    //产生计划外的java文件
    public List<GeneratedJavaFile> contextGenerateAdditionalJavaFiles(IntrospectedTable introspectedTable) {
        if(true) {
            return null;
        }
        shellCallback=new DefaultShellCallback(false);
        daoTargetDir=super.getContext().getJavaModelGeneratorConfiguration().getTargetProject();
        daoTargetPackage=super.getContext().getJavaModelGeneratorConfiguration().getTargetPackage().replace("domain","dao");
        JavaFormatter javaFormatter = context.getJavaFormatter();
        List<GeneratedJavaFile> mapperJavaFiles = new ArrayList<>();
        for (GeneratedJavaFile javaFile : introspectedTable.getGeneratedJavaFiles()) {
            CompilationUnit unit = javaFile.getCompilationUnit();
            FullyQualifiedJavaType baseModelJavaType = unit.getType();

            String shortName = baseModelJavaType.getShortName();
            if(shortName.endsWith("Example")){
                continue;
            }
            GeneratedJavaFile mapperJavafile = null;

            Interface mapperInterface = new Interface(daoTargetPackage + "." + shortName + "Mapper");

            mapperInterface.setVisibility(JavaVisibility.PUBLIC);
            mapperInterface.addJavaDocLine("/**");
            mapperInterface.addJavaDocLine(" * 该Mapper类用于扩展Mapper接口方法");
            mapperInterface.addJavaDocLine(" * @author zhihuan.niu");
            mapperInterface.addJavaDocLine(" */");

            FullyQualifiedJavaType daoSuperType = new FullyQualifiedJavaType("com.funi.demo.core.dao.IMapper");
            FullyQualifiedJavaType ParamType = new FullyQualifiedJavaType("org.apache.ibatis.annotations.Param");
            // 添加泛型支持
            FullyQualifiedJavaType baseExampleModelJavaType =  new FullyQualifiedJavaType(unit.getType().getFullyQualifiedName()+"Example");;
            daoSuperType.addTypeArgument(baseModelJavaType);
            daoSuperType.addTypeArgument(baseExampleModelJavaType);
            mapperInterface.addImportedType(baseModelJavaType);
            mapperInterface.addImportedType(baseExampleModelJavaType);
            mapperInterface.addImportedType(daoSuperType);
            mapperInterface.addImportedType(ParamType);
            mapperInterface.addSuperInterface(daoSuperType);

            mapperJavafile = new GeneratedJavaFile(mapperInterface, daoTargetDir, javaFormatter);
            File mapperDir = null;
            try {
                mapperDir = shellCallback.getDirectory(daoTargetDir, daoTargetPackage);
            } catch (ShellException e) {
                e.printStackTrace();
            }
            File mapperFile = new File(mapperDir, mapperJavafile.getFileName());
            // 文件不存在
            if (!mapperFile.exists()) {
                mapperJavaFiles.add(mapperJavafile);
            }
        }
        return mapperJavaFiles;
    }
}
